#Использовать asserts
#Использовать "../src"

&Тест
Процедура ЗатемОтрабатывает() Экспорт

	// Когда

	Обещание = Обещание()
		.Затем("Х -> Х * 4");

	// Тогда

	Утверждения.ПроверитьРавенство(Обещание.Получить(), 4);

КонецПроцедуры

&Тест
Процедура ПойматьОтрабатывает() Экспорт

	// Когда

	Обещание = ОбещаниеСОшибкой()
		.Поймать("Информация -> СтрНайти(Информация.Описание, ""ЯОшибка"") > 0");

	// Тогда

	Утверждения.ПроверитьИстину(Обещание.Получить());

КонецПроцедуры

&Тест
Процедура ПойматьНеЛовитИсключенияВышестоящихОбещаний() Экспорт

	// Когда

	Обещание = ОбещаниеСОшибкой()
		.Поймать("Информация -> СтрНайти(Информация.Описание, ""ЯОшибка"") > 0")
		.Затем("Успех ->
		|	Если Успех Тогда
		|		ВызватьИсключение ""ЯЕщёОшибка""
		|	Иначе
		|		Возврат ""ЧтоТоПошлоНеТак""
		|	КонецЕсли;");

	// Тогда

	Ожидаем.Что(Обещание)
		.Метод("Получить")
		.ВыбрасываетИсключение("ЯЕщёОшибка");

КонецПроцедуры

&Тест
Процедура Цепочка() Экспорт

	// Когда

	Обещание = Обещание()
		.Затем("Х -> Х * 4") // 4
		.Затем("Х -> Х / 2") // 2
		.Затем("Х -> Х % 2") // 0
		.Затем("Х -> 5 / Х") // Исключение
		.Поймать("Инфо -> СтрНайти(Инфо.Описание, ""Деление на ноль"") > 0");

	// Тогда

	Утверждения.ПроверитьИстину(Обещание.Получить());

КонецПроцедуры

&Тест
Процедура ПадаетПоТаймауту() Экспорт

	Параметры = Новый Массив;
	Параметры.Добавить(1);

	Ожидаем.Что(Обещание())
		.Метод("Получить", Параметры)
		.ВыбрасываетИсключение("Превышено время ожидания получения результата");

КонецПроцедуры

&Тест
Процедура ПойматьВозвращаетРезультатЕслиНетИсключения() Экспорт

	// Когда

	Обещание = Обещание()
		.Поймать("(Инфо) -> Возврат Ложь;");

	// Тогда

	Утверждения.ПроверитьРавенство(Обещание.Получить(), 1);

КонецПроцедуры

&Тест
Процедура Состояние() Экспорт

	НеЗапущенноеОбещание = Новый Обещание("", "");
	Утверждения.ПроверитьРавенство(НеЗапущенноеОбещание.Состояние(), СостояниеФоновогоЗадания.НеВыполнялось);

	Обещание = Обещание();

	Приостановить(10);

	Утверждения.ПроверитьРавенство(Обещание.Состояние(), СостояниеФоновогоЗадания.Активно);

	Приостановить(100);

	Утверждения.ПроверитьРавенство(Обещание.Состояние(), СостояниеФоновогоЗадания.Завершено);

КонецПроцедуры

Функция Обещание()
	Возврат Обещания.ВыполнитьЛямбду("() -> Приостановить(100); Возврат 1", ЭтотОбъект, Новый Массив);
КонецФункции

Функция ОбещаниеСОшибкой()
	Возврат Обещания.ВыполнитьЛямбду("() -> ВызватьИсключение ""ЯОшибка""", ЭтотОбъект, Новый Массив);
КонецФункции
