#Область ОписаниеПеременных

Перем Рефлектор; // Для доступа к приватным полям обещания

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗапуститьВыполнениеОбещания(Обещание) Экспорт

	Параметры = Новый Массив;
	Параметры.Добавить(Обещание);

	Задание = ФоновыеЗадания.Выполнить(ЭтотОбъект, "ВыполнитьОбещание", Параметры);

	Рефлектор.УстановитьСвойство(Обещание, "Задание", Задание);

КонецПроцедуры

Функция ВыполнитьОбещание(Обещание) Экспорт

	Контекст = Рефлектор.ПолучитьСвойство(
		Обещание,
		"КонтекстВыполнения"
	);

	Если Контекст.Предыдущий() <> Неопределено Тогда

		Если Контекст.ПерехватчикИсключения() Тогда

			Попытка
				Результат = Контекст.Предыдущий()
					.Получить();
			Исключение
				Результат = Контекст.Алгоритм()
					.Выполнить(ИнформацияОбОшибке());
			КонецПопытки;

			Возврат Результат;

		Иначе

			Возврат Контекст.Алгоритм()
				.Выполнить(Контекст.Предыдущий().Получить());

		КонецЕсли;

	Иначе

		Параметры = Контекст.Параметры();

		СтрокаПараметров = Новый Массив();

		Для Счетчик = 0 По Параметры.ВГраница() Цикл
			СтрокаПараметров.Добавить(СтрШаблон("Параметры[%1]", Счетчик));
		КонецЦикла;

		Возврат Вычислить(СтрШаблон("Контекст.Алгоритм().Выполнить(%1)", СтрСоединить(СтрокаПараметров, ",")));

	КонецЕсли;

КонецФункции

#КонецОбласти

Рефлектор = Новый Рефлектор();
